<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>linux on AswinBlue</title>
    <link>https://aswinblue.github.io/tags/linux/</link>
    <description>Recent content in linux on AswinBlue</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 15 Jul 2023 08:35:21 +0900</lastBuildDate><atom:link href="https://aswinblue.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>System_programming</title>
      <link>https://aswinblue.github.io/post/linux/system_programming/</link>
      <pubDate>Sat, 15 Jul 2023 08:35:21 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/post/linux/system_programming/</guid>
      <description>System Programming 프로그램이 동작하는 구조는 크게 application, kernel, HW 로 분리할 수 있다. _____________| Library |¯¯¯¯¯¯¯¯¯¯¯¯¯ Application level------------------------------_____________|System call|¯¯¯¯¯¯¯¯¯¯¯¯¯ Kernel level------------------------------_____________| Hardware |¯¯¯¯¯¯¯¯¯¯¯¯¯ H/W level------------------------------ application level에서는 library를 사용하며, 이 코드들은 library buffer를 사용한다. (open(), read(), write(), close() &amp;hellip;) Kernel level에서는 System call을 사용하며 system buffer를 사용한다. application level 함수를 사용하면, 보통 library buffer를 1차적으로 사용하고, 내부적으로 system call을 수행해 system buffer를 2차적으로 사용하게 된다.</description>
    </item>
    
    <item>
      <title>Shell</title>
      <link>https://aswinblue.github.io/post/linux/shell/</link>
      <pubDate>Thu, 13 Jul 2023 18:29:44 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/post/linux/shell/</guid>
      <description>Shell 리눅스 쉘 명령어에 대해 기술한다.
기본 !/bin/bash : 쉘 파일을 실행할 때 어떤 쉘로 실행될지 설정 하는 것 set -x : 실행되는 내용의 결과를 화면에 출력</description>
    </item>
    
    <item>
      <title>Linux_env</title>
      <link>https://aswinblue.github.io/post/linux/linux_env/</link>
      <pubDate>Mon, 10 Jul 2023 21:04:56 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/post/linux/linux_env/</guid>
      <description>Dev in Linux 리눅스 개발환경 구축을 위한 가이드
.bashrc 홈 디렉터리에 위치한 user별 설정 파일이다.
source ~/.bashrc 명령어로 언제든 새로고침 할 수 있다.
리눅스 콘솔 프롬프트를 보기 쉽게 색칠하기 위한 설정할 수 있다.
force_color_prompt=trueif [ -n &amp;#34;$force_color_prompt&amp;#34; ]; thenif [ -x /usr/bin/tput ] &amp;amp;&amp;amp; tput setaf 1 &amp;gt;&amp;amp;/dev/null; then# We have color support; assume it&amp;#39;s compliant with Ecma-48# (ISO/IEC-6429). (Lack of such support is extremely rare, and such# a case would tend to support setf rather than setaf.</description>
    </item>
    
    <item>
      <title>Virtual_box</title>
      <link>https://aswinblue.github.io/post/linux/virtual_box/</link>
      <pubDate>Sun, 02 Jul 2023 20:03:24 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/post/linux/virtual_box/</guid>
      <description>VirtualBox 문제와 해결 root 계정 virtual box를 생성하면 기본 user의 이름은 vboxuser로 세팅되어 있다. 하지만 vboxuser는 sudo 권한이 없어 다른 설정을 수행 할 수가 없다. virtual box에서 root 계정 비밀번호를 변경하는 방법은 다음과 같다. virtualbox에서 원하는 ubuntu machine를 실행시킨다. machine이 실행되는 도중 shift키를 클릭하고 있는다. 부팅 모드 선택 화면이 뜨면 Advanced options for Ubuntu 를 선택하고, (recovery mode)표시가 되어있는 항목으로 부팅을 시도한다. 로딩이 완료되면 root 라는 항목을 선택하여 root 계정의 비밀번호를 재설정 할 수 있다.</description>
    </item>
    
    <item>
      <title>Linux commands</title>
      <link>https://aswinblue.github.io/post/linux/linux_command/</link>
      <pubDate>Thu, 12 Aug 2021 10:41:00 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/post/linux/linux_command/</guid>
      <description>리눅스 기본 stty -a: 시그널 단축키들의 값 확인 strace FILE_NAME: 실행파일이 실행되는 상세 과정을 라인별로 보여준다. sed 기본적인 기능은 ed에서 따 왔으며, 이 기능들은 모두 sed에 적용이 된다. ed는 대화형 편집기이며, sed는 스트리밍 편집기 \n 을 개행문자로 사용하는 스트리밍 에디터 sed [-e script][-f script-file][file...]
찾기/출력 sed -n &#39;/abd/p&#39; list.txt : list.txt : 파일을 한줄씩 읽으면서(-n : 읽은 것을 출력하지 않음) abd 문자를 찾으면 그 줄을 출력(p)한다. 치환 sed &#39;s/addrass/address/&#39; list.txt : list.</description>
    </item>
    
    <item>
      <title>Linux_apt</title>
      <link>https://aswinblue.github.io/post/linux/linux_apt/</link>
      <pubDate>Mon, 25 May 2020 18:30:15 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/post/linux/linux_apt/</guid>
      <description>Linux 서버에 개발 환경을 세팅하는데 뭔가 제대로 되지 않아 이미 환경설정을 해 본 다른 사람에게 원격으로 도움을 요청했다.
하지만 그 사람이 리눅스에 익숙하지 않았는지, 우리 서버를 잘못 만져 apt가 먹통이 되는 현상이 발생했다.
본 해프닝에 대해 서술하자면 아래와 같다.
원인 /bin 디렉터리 안의 python bin파일을 강제로 삭제한 것이 원인으로 추정된다.
환경 설정을 하는데 제대로 되지 않으니 sudo apt-get upgrade 명령도 남용하기도 했다.
현상 apt를 이용해 install, remove를 하려 하면 py3compile, py3clean 등에서 오류가 발생하였다.</description>
    </item>
    
  </channel>
</rss>
