<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>WindowApp on AswinBlue</title>
    <link>https://aswinblue.github.io/Blog/post/windowapp/</link>
    <description>Recent content in WindowApp on AswinBlue</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Jul 2023 09:23:44 +0900</lastBuildDate><atom:link href="https://aswinblue.github.io/Blog/post/windowapp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Window_programming</title>
      <link>https://aswinblue.github.io/Blog/post/windowapp/window_programming/</link>
      <pubDate>Sun, 12 May 2024 16:02:25 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/Blog/post/windowapp/window_programming/</guid>
      <description>Window Programming PE 윈도우는 실행 가능한 목적 파일을 PE 포멧이라 칭한다. (리눅스의 ELF 와 유사) PE 파일은 header 와 section 으로 구성된다. section 에는 이름, 크기, 로드될 주소의 오프셋, 속성과 권한 등의 정보가 들어있다. PE 파일에 들어가야 할 필수 section 은 없지만, &amp;lsquo;.text&amp;rsquo;, &amp;lsquo;.data&amp;rsquo;, &amp;lsquo;.rdata&amp;rsquo; section 이 주로 사용된다. .text: 실행 가능한 기계코드가 위치하는 영역 (읽기, 쓰기 가능) .data: 컴파일 시점에 정해진 전역 변수들이 위치하는 영역 (읽기, 쓰기 가능) .rdata: 컴파일 시점에 값이 정해진 전역 상수와 참조할 DLL 및 외부 함수들의 정보가 위치하는 영역 (읽기만 가능) 윈도우가 실행되면 PE 파일의 데이터들이 메모리에 적재된다.</description>
    </item>
    
    <item>
      <title>Kivy</title>
      <link>https://aswinblue.github.io/Blog/post/windowapp/kivy/</link>
      <pubDate>Thu, 09 Sep 2021 18:43:28 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/Blog/post/windowapp/kivy/</guid>
      <description>#kivy
Basic concepts Widget 어플리케이션을 구성하는 객체 widget은 다른 widget을 tree형태로 포함 가능하며 버튼, 라벨 등상호작용 가능한 객체 또는 Widget의 집합 위치는 좌표로 표현되는데 좌표는 좌측하단이 (0,0)이다. Layout 화면 구성을 설정한 요소 widget 혹은 layout을 포함 가능하다. structure main.py에 python으로 내용을 작성한다. class TheLabApp(App):passTheLabApp().run() main.py에서 선언한 class &amp;lsquo;TheLabApp&amp;rsquo; 에서 App을 뺀 TheLab을 따서 main.py와 같은 경로에 &amp;lsquo;TheLab.kv&amp;rsquo;파일을 생성한다. /|-main.py|-TheLab.kv .py파일에서 원하는 layout class를 상속받아 객체를 구성할 수도 있고, .</description>
    </item>
    
  </channel>
</rss>
